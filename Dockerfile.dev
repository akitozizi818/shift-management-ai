# ==============================================
# 開発用 Dockerfile (本番環境ベース)
# 本番用Dockerfileをベースに開発用に最適化
# ==============================================

# =====================================
# Dependencies Stage (本番用依存関係のインストール)
# =====================================
FROM node:20-slim AS deps

RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# =====================================
# Builder Stage (開発用アプリケーションのビルド)
# =====================================
FROM node:20-slim AS builder

WORKDIR /app

COPY package*.json ./
COPY tsconfig.json ./
COPY next-env.d.ts ./

# 開発用：全ての依存関係をインストール
RUN rm -rf node_modules && npm ci

# @emotion/is-prop-valid を明示的にインストール
RUN npm install @emotion/is-prop-valid

COPY . .

# 開発用：環境変数を.envファイルから読み込まずに直接ビルド
# 開発時は実行時に環境変数を設定するため
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# 開発用：ビルドをスキップ（実行時にnpm run devを使用するため）
# RUN npm run build

# =====================================
# Runner Stage (開発環境での実行)
# =====================================
FROM node:20-slim AS runner

# セキュリティ: 非rootユーザーを作成
RUN groupadd --gid 1001 --system nodejs
RUN useradd --uid 1001 --system --gid nodejs nextjs

WORKDIR /app

# 開発用：必要なツールをインストール
RUN apt-get update && apt-get install -y \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# 環境変数
ENV NODE_ENV=development
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# 開発用：builderステージから必要なファイルをコピー
COPY --from=builder --chown=nextjs:nodejs /app/package*.json ./
COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./
COPY --from=builder --chown=nextjs:nodejs /app/tsconfig.json ./
COPY --from=builder --chown=nextjs:nodejs /app/tailwind.config.js ./
COPY --from=builder --chown=nextjs:nodejs /app/postcss.config.js ./

# ソースコードをコピー（開発時はボリュームマウントで上書きされる）
COPY --chown=nextjs:nodejs . .

# .nextディレクトリを事前に作成し、権限を設定
RUN mkdir -p .next && chown -R nextjs:nodejs .next

USER nextjs

EXPOSE 3000

# 開発用：開発サーバーを起動
CMD ["npm", "run", "dev"]